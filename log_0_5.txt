Printing for config 5 step 0
```python
import numpy as np

def identifyCornerRegions(corners):
    # corners is a numpy array of shape (4,2)
    # each row is a corner [x,y]
    # corners are in clockwise order starting from top left
    top_left, top_right, bottom_right, bottom_left = corners
    return [('top_left', top_left), ('top_right', top_right), ('bottom_right', bottom_right), ('bottom_left', bottom_left)]
```

```python
def identifyPickandPlace(corners, center):
    # corners is a list of tuples
    # each tuple is ('region', [x,y])
    # center is a numpy array [x,y]
    # for double straight fold, we pick along one vertical edge and place it on the opposite edge
    # so we pick at top_left and bottom_left and place at top_right and bottom_right
    pick_pos_1 = [corner[1] for corner in corners if corner[0] == 'top_left'][0]
    pick_pos_2 = [corner[1] for corner in corners if corner[0] == 'bottom_left'][0]
    place_pos_1 = [corner[1] for corner in corners if corner[0] == 'top_right'][0]
    place_pos_2 = [corner[1] for corner in corners if corner[0] == 'bottom_right'][0]
    return pick_pos_1, pick_pos_2, place_pos_1, place_pos_2
```

```python
# call the above functions
corners = identifyCornerRegions(cloth_corners)
pick_pos_1, pick_pos_2, place_pos_1, place_pos_2 = identifyPickandPlace(corners, cloth_center)

# print the pick and place positions
print('pick_pos_1:', pick_pos_1)
print('pick_pos_2:', pick_pos_2)
print('place_pos_1:', place_pos_1)
print('place_pos_2:', place_pos_2)
```

```python
def findDistanceAndDirection(pick_pos, place_pos):
    # pick_pos and place_pos are numpy arrays [x,y]
    # distance is the euclidean distance between pick_pos and place_pos
    # direction is the angle between the horizontal axis and the line connecting pick_pos and place_pos
    distance = np.linalg.norm(place_pos - pick_pos)
    direction = np.arctan2(place_pos[1] - pick_pos[1], place_pos[0] - pick_pos[0])
    return distance, direction
```

```python
# call the above function
distance_1, direction_1 = findDistanceAndDirection(pick_pos_1, place_pos_1)
distance_2, direction_2 = findDistanceAndDirection(pick_pos_2, place_pos_2)

# print the distances and directions
print('distance_1:', distance_1, 'direction_1:', direction_1)
print('distance_2:', distance_2, 'direction_2:', direction_2)
```
